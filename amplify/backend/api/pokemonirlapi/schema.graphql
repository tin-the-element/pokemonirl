interface Task{
  id: ID!
  name: String!
  images: String!
  question: String!
  turns_permitted: Int!
  exp_given: Int!
  win_quote: String!
  lose_quote: String!
}

type SingleTask implements Task @model {
  id: ID!
  name: String!
  images: String!
  question: String!
  turns_permitted: Int!
  exp_given: Int!
  win_quote: String!
  lose_quote: String!
  answer: [String]!
  total_hp: Int!
}

type MultipleTask implements Task @model {
  id: ID!
  name: String!
  images: String!
  question: String!
  turns_permitted: Int!
  exp_given: Int!
  win_quote: String!
  lose_quote: String!
  next_steps: [String]!
  answer: [String]!
}

type RiddleTask implements Task @model {
  id: ID!
  name: String!
  images: String!
  question: String!
  turns_permitted: Int!
  exp_given: Int!
  win_quote: String!
  lose_quote: String!
  next_steps: [String]!
  answer: [String]!
  
}

type Account @model {
  id: String!
  username: String!
  users_pokemon: [String] 
  money: Int!
  completed_tasks: [String]!
}

type UserPokemon @model {
  id: ID!
  accountID: String!
  pokemon: String!
  image: String!
  movelist: [String]!
  level: Int!
  exp_until_level: Int!
}

type Pokemon @model @searchable{
  api_id: Int!
  name: String!
  types: [String]! 
  image: String!
  api: String!
}

type Move @model @searchable{
  api_id: Int!
  name: String!
  type: String!
  power: Int!
  api: String!
}

type Type @model {
  api_id: Int!
  name: String!
  api: String!
}
