type Todo @model {
  id: ID!
  name: String!
  description: String
}

interface Task{
  id: ID!
  name: String!
  images: String!
  question: String!
  turns_permitted: Int!
  exp_given: Int!
  win_quote: String!
  lose_quote: String!
  next_steps: [String]
}

type SingleTask implements Task @model {
  id: ID!
  name: String!
  images: String!
  question: String!
  turns_permitted: Int!
  exp_given: Int!
  win_quote: String!
  lose_quote: String!
  next_steps: [String]
  answer: [String!]
  total_hp: Int!
}

type MultipleTask implements Task @model {
  id: ID!
  name: String!
  images: String!
  question: String!
  turns_permitted: Int!
  exp_given: Int!
  win_quote: String!
  lose_quote: String!
  next_steps: [String]
  answer: [String]!
}

type RiddleTask implements Task @model {
  id: ID!
  name: String!
  images: String!
  question: String!
  turns_permitted: Int!
  exp_given: Int!
  win_quote: String!
  lose_quote: String!
  next_steps: [String]
  answer: [Move]!
  
}

type Move @model {
  name: String!
  type: String! 
  power: Int!
}
